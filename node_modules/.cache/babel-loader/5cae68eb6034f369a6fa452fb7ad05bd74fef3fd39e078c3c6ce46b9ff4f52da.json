{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport $ from \"jquery\";\nimport Button from \"./Components/Button/Button\";\nimport \"./Main.css\";\n\n// NUMEROS\n// https://makemeapassword.ligos.net/api/v1/pin/json?c=10&l=6\n// NUMEROS Y LETRAS\n// https://makemeapassword.ligos.net/api/v1/alphanumeric/json?c=10&l=12\n// \"num\" = numeros\n// \"char\" = caracteres\n// \"caps\" = mayusculas\n// https://passwordinator.herokuapp.com/?num=true&char=true&caps=true&len=18\n\nfunction App() {\n  _s();\n  const [elvalue, setElvalue] = useState();\n  const [rangoMaximo, setRangoMaximo] = useState();\n  const generarClaveIF = () => {\n    const algo = $(\".algo\").val();\n    setElvalue(algo);\n    // const cantidad = String(elvalue).length;\n    // console.log( `` );\n  };\n\n  const generarClave = restriccion => {\n    const num = \"&num=true\";\n    const char = \"&char=true\";\n    const caps = \"&caps=true\";\n    const api = `https://passwordinator.herokuapp.com/${num}${char}${caps}&len=18`;\n    Promise.all([fetch(api).then(value => value.json())]).then(value => {\n      const clave = value[0].data;\n      console.log(`Password => ${clave}`);\n    });\n  };\n  const verificarRestricciones = () => {\n    $.each($(\".restricciones > label\"), function () {\n      const restriccion = $(this).text();\n      const isCheck = $(this).find(\"input\").is(\":checked\");\n      console.log(`\n\t\t\t\tRestriccion: ${restriccion}\n\t\t\t\tCheck?: ${isCheck}\n\t\t\t`);\n    });\n    const algo = $(\".range\").val();\n    console.log(`Rango: ${algo}`);\n  };\n  const eselrangoMaximo = () => {\n    const elrango = $(\"#range\").val();\n    console.log(`Rango -> ${elrango}`);\n    setRangoMaximo(elrango);\n  };\n  useEffect(() => {\n    eselrangoMaximo();\n  }, []);\n  return `\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<h2>{elvalue}</h2>\n\t\t\t\t<input className=\"algo\" type=\"text\" onChange={generarClaveIF} placeholder=\"Aca aparecera la contraseña\" />\n\t\t\t\t<div className=\"restricciones\">\n\t\t\t\t\t<label htmlFor=\"range\">\n\t\t\t\t\t\tRango ( ${rangoMaximo} )\n\t\t\t\t\t\t<input id=\"range\" className=\"range\" type=\"range\" max=\"20\" onChange={eselrangoMaximo} />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label htmlFor=\"num\">\n\t\t\t\t\t\tNumeros\n\t\t\t\t\t\t<input id=\"num\" className=\"num\" type=\"checkbox\" />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label htmlFor=\"char\">\n\t\t\t\t\t\tChar\n\t\t\t\t\t\t<input id=\"char\" className=\"char\" type=\"checkbox\" />\n\t\t\t\t\t</label>\n\t\t\t\t\t<label htmlFor=\"caps\">\n\t\t\t\t\t\tCaps\n\t\t\t\t\t\t<input id=\"caps\" className=\"caps\" type=\"checkbox\" />\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<Button texto=\"Generar\" onClick={verificarRestricciones} isotipo />\n\t\t\t</header>\n\t\t</div>\n\t\t`;\n}\n_s(App, \"vfb4Kbo8CVWVPpotcBMvMYzDIzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","$","Button","App","elvalue","setElvalue","rangoMaximo","setRangoMaximo","generarClaveIF","algo","val","generarClave","restriccion","num","char","caps","api","Promise","all","fetch","then","value","json","clave","data","console","log","verificarRestricciones","each","text","isCheck","find","is","eselrangoMaximo","elrango"],"sources":["C:/Users/elPaulo/Proyectos/passtrong/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport Button from \"./Components/Button/Button\";\r\nimport \"./Main.css\";\r\n\r\n// NUMEROS\r\n// https://makemeapassword.ligos.net/api/v1/pin/json?c=10&l=6\r\n// NUMEROS Y LETRAS\r\n// https://makemeapassword.ligos.net/api/v1/alphanumeric/json?c=10&l=12\r\n// \"num\" = numeros\r\n// \"char\" = caracteres\r\n// \"caps\" = mayusculas\r\n// https://passwordinator.herokuapp.com/?num=true&char=true&caps=true&len=18\r\n\r\nfunction App() {\r\n\tconst [elvalue, setElvalue] = useState();\r\n\tconst [rangoMaximo, setRangoMaximo] = useState();\r\n\r\n\tconst generarClaveIF = () => {\r\n\t\tconst algo = $(\".algo\").val();\r\n\t\tsetElvalue(algo);\r\n\t\t// const cantidad = String(elvalue).length;\r\n\t\t// console.log( `` );\r\n\t};\r\n\r\n\tconst generarClave = ( restriccion ) => {\r\n\t\tconst num = \"&num=true\";\r\n\t\tconst char = \"&char=true\";\r\n\t\tconst caps = \"&caps=true\";\r\n\t\tconst api = `https://passwordinator.herokuapp.com/${num}${char}${caps}&len=18`;\r\n\t\tPromise.all([\r\n\t\t\tfetch( api ).then((value) => value.json())\r\n\t\t])\r\n\t\t\t.then((value) => {\r\n\t\t\t\tconst clave = value[0].data;\r\n\t\t\t\tconsole.log( `Password => ${clave}` );\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst verificarRestricciones = () => {\r\n\t\t$.each($(\".restricciones > label\"), function () {\r\n\t\t\tconst restriccion = $(this).text();\r\n\t\t\tconst isCheck = $(this).find(\"input\").is(\":checked\");\r\n\t\t\tconsole.log( `\r\n\t\t\t\tRestriccion: ${restriccion}\r\n\t\t\t\tCheck?: ${isCheck}\r\n\t\t\t` );\r\n\t\t});\r\n\t\tconst algo = $(\".range\").val();\r\n\t\tconsole.log(`Rango: ${algo}`);\r\n\t};\r\n\r\n\tconst eselrangoMaximo = () => {\r\n\t\tconst elrango = $(\"#range\").val();\r\n\t\tconsole.log( `Rango -> ${elrango}` );\r\n\t\tsetRangoMaximo(elrango);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\teselrangoMaximo();\r\n\t}, []);\r\n\r\n\treturn ( `\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<h2>{elvalue}</h2>\r\n\t\t\t\t<input className=\"algo\" type=\"text\" onChange={generarClaveIF} placeholder=\"Aca aparecera la contraseña\" />\r\n\t\t\t\t<div className=\"restricciones\">\r\n\t\t\t\t\t<label htmlFor=\"range\">\r\n\t\t\t\t\t\tRango ( ${rangoMaximo} )\r\n\t\t\t\t\t\t<input id=\"range\" className=\"range\" type=\"range\" max=\"20\" onChange={eselrangoMaximo} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"num\">\r\n\t\t\t\t\t\tNumeros\r\n\t\t\t\t\t\t<input id=\"num\" className=\"num\" type=\"checkbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"char\">\r\n\t\t\t\t\t\tChar\r\n\t\t\t\t\t\t<input id=\"char\" className=\"char\" type=\"checkbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"caps\">\r\n\t\t\t\t\t\tCaps\r\n\t\t\t\t\t\t<input id=\"caps\" className=\"caps\" type=\"checkbox\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Button texto=\"Generar\" onClick={verificarRestricciones} isotipo />\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t\t`);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,CAAC,MAAM,QAAQ;AAEtB,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAO,YAAY;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,EAAE;EACxC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,EAAE;EAEhD,MAAMQ,cAAc,GAAG,MAAM;IAC5B,MAAMC,IAAI,GAAGR,CAAC,CAAC,OAAO,CAAC,CAACS,GAAG,EAAE;IAC7BL,UAAU,CAACI,IAAI,CAAC;IAChB;IACA;EACD,CAAC;;EAED,MAAME,YAAY,GAAKC,WAAW,IAAM;IACvC,MAAMC,GAAG,GAAG,WAAW;IACvB,MAAMC,IAAI,GAAG,YAAY;IACzB,MAAMC,IAAI,GAAG,YAAY;IACzB,MAAMC,GAAG,GAAI,wCAAuCH,GAAI,GAAEC,IAAK,GAAEC,IAAK,SAAQ;IAC9EE,OAAO,CAACC,GAAG,CAAC,CACXC,KAAK,CAAEH,GAAG,CAAE,CAACI,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,EAAE,CAAC,CAC1C,CAAC,CACAF,IAAI,CAAEC,KAAK,IAAK;MAChB,MAAME,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAAG,eAAcH,KAAM,EAAC,CAAE;IACtC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,sBAAsB,GAAG,MAAM;IACpC1B,CAAC,CAAC2B,IAAI,CAAC3B,CAAC,CAAC,wBAAwB,CAAC,EAAE,YAAY;MAC/C,MAAMW,WAAW,GAAGX,CAAC,CAAC,IAAI,CAAC,CAAC4B,IAAI,EAAE;MAClC,MAAMC,OAAO,GAAG7B,CAAC,CAAC,IAAI,CAAC,CAAC8B,IAAI,CAAC,OAAO,CAAC,CAACC,EAAE,CAAC,UAAU,CAAC;MACpDP,OAAO,CAACC,GAAG,CAAG;AACjB,mBAAmBd,WAAY;AAC/B,cAAckB,OAAQ;AACtB,IAAI,CAAE;IACJ,CAAC,CAAC;IACF,MAAMrB,IAAI,GAAGR,CAAC,CAAC,QAAQ,CAAC,CAACS,GAAG,EAAE;IAC9Be,OAAO,CAACC,GAAG,CAAE,UAASjB,IAAK,EAAC,CAAC;EAC9B,CAAC;EAED,MAAMwB,eAAe,GAAG,MAAM;IAC7B,MAAMC,OAAO,GAAGjC,CAAC,CAAC,QAAQ,CAAC,CAACS,GAAG,EAAE;IACjCe,OAAO,CAACC,GAAG,CAAG,YAAWQ,OAAQ,EAAC,CAAE;IACpC3B,cAAc,CAAC2B,OAAO,CAAC;EACxB,CAAC;EAEDnC,SAAS,CAAC,MAAM;IACfkC,eAAe,EAAE;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAU;AACX;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB3B,WAAY;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AAAC,GA3EQH,GAAG;AAAA,KAAHA,GAAG;AA6EZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}